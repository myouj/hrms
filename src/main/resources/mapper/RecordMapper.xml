<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lqt.hr.dao.RecordMapper">
  <resultMap id="BaseResultMap" type="com.lqt.hr.model.Record">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="e_id" jdbcType="INTEGER" property="eId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="ID_card" jdbcType="CHAR" property="idCard" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="job_title" jdbcType="VARCHAR" property="jobTitle" />
    <result column="entry_time" jdbcType="TIMESTAMP" property="entryTime" />
    <result column="bank" jdbcType="VARCHAR" property="bank" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="con_id" jdbcType="INTEGER" property="conId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, e_id, name, ID_card, gender, state, dept_id, department, job_title, entry_time, 
    bank, account, con_id
  </sql>
  <select id="selectByExample" parameterType="com.lqt.hr.model.RecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lqt.hr.model.RecordExample">
    delete from record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lqt.hr.model.Record">
    insert into record (id, e_id, name, 
      ID_card, gender, state, dept_id, 
      department, job_title, entry_time, 
      bank, account, con_id
      )
    values (#{id,jdbcType=INTEGER}, #{eId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{idCard,jdbcType=CHAR}, #{gender,jdbcType=CHAR}, #{state,jdbcType=VARCHAR}, #{deptId,jdbcType=INTEGER}, 
      #{department,jdbcType=VARCHAR}, #{jobTitle,jdbcType=VARCHAR}, #{entryTime,jdbcType=TIMESTAMP}, 
      #{bank,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{conId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lqt.hr.model.Record">
    insert into record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="eId != null">
        e_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="idCard != null">
        ID_card,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="jobTitle != null">
        job_title,
      </if>
      <if test="entryTime != null">
        entry_time,
      </if>
      <if test="bank != null">
        bank,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="conId != null">
        con_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="eId != null">
        #{eId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=CHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="jobTitle != null">
        #{jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="entryTime != null">
        #{entryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bank != null">
        #{bank,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="conId != null">
        #{conId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lqt.hr.model.RecordExample" resultType="java.lang.Long">
    select count(*) from record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.eId != null">
        e_id = #{record.eId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.idCard != null">
        ID_card = #{record.idCard,jdbcType=CHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=INTEGER},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.jobTitle != null">
        job_title = #{record.jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.entryTime != null">
        entry_time = #{record.entryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bank != null">
        bank = #{record.bank,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.conId != null">
        con_id = #{record.conId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update record
    set id = #{record.id,jdbcType=INTEGER},
      e_id = #{record.eId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      ID_card = #{record.idCard,jdbcType=CHAR},
      gender = #{record.gender,jdbcType=CHAR},
      state = #{record.state,jdbcType=VARCHAR},
      dept_id = #{record.deptId,jdbcType=INTEGER},
      department = #{record.department,jdbcType=VARCHAR},
      job_title = #{record.jobTitle,jdbcType=VARCHAR},
      entry_time = #{record.entryTime,jdbcType=TIMESTAMP},
      bank = #{record.bank,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      con_id = #{record.conId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lqt.hr.model.Record">
    update record
    <set>
      <if test="eId != null">
        e_id = #{eId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idCard != null">
        ID_card = #{idCard,jdbcType=CHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="jobTitle != null">
        job_title = #{jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="entryTime != null">
        entry_time = #{entryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bank != null">
        bank = #{bank,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="conId != null">
        con_id = #{conId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lqt.hr.model.Record">
    update record
    set e_id = #{eId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      ID_card = #{idCard,jdbcType=CHAR},
      gender = #{gender,jdbcType=CHAR},
      state = #{state,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=INTEGER},
      department = #{department,jdbcType=VARCHAR},
      job_title = #{jobTitle,jdbcType=VARCHAR},
      entry_time = #{entryTime,jdbcType=TIMESTAMP},
      bank = #{bank,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      con_id = #{conId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>