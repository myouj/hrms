<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lqt.hr.dao.EmployeeInfoMapper">
  <resultMap id="BaseResultMap" type="com.lqt.hr.model.EmployeeInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="id_number" jdbcType="CHAR" property="idNumber" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="birth_day" jdbcType="DATE" property="birthDay" />
    <result column="native_place" jdbcType="VARCHAR" property="nativePlace" />
    <result column="marital_status" jdbcType="VARCHAR" property="maritalStatus" />
    <result column="politics_status" jdbcType="VARCHAR" property="politicsStatus" />
    <result column="employees_status" jdbcType="VARCHAR" property="employeesStatus" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="jobs" jdbcType="VARCHAR" property="jobs" />
    <result column="titles" jdbcType="VARCHAR" property="titles" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, id_number, gender, birth_day, native_place, marital_status, politics_status, 
    employees_status, department_id, jobs, titles
  </sql>
  <select id="selectByExample" parameterType="com.lqt.hr.model.EmployeeInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from employee_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lqt.hr.model.EmployeeInfoExample">
    delete from employee_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lqt.hr.model.EmployeeInfo">
    insert into employee_info (id, name, id_number, 
      gender, birth_day, native_place, 
      marital_status, politics_status, employees_status, 
      department_id, jobs, titles
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{idNumber,jdbcType=CHAR}, 
      #{gender,jdbcType=VARCHAR}, #{birthDay,jdbcType=DATE}, #{nativePlace,jdbcType=VARCHAR}, 
      #{maritalStatus,jdbcType=VARCHAR}, #{politicsStatus,jdbcType=VARCHAR}, #{employeesStatus,jdbcType=VARCHAR}, 
      #{departmentId,jdbcType=INTEGER}, #{jobs,jdbcType=VARCHAR}, #{titles,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lqt.hr.model.EmployeeInfo">
    insert into employee_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birthDay != null">
        birth_day,
      </if>
      <if test="nativePlace != null">
        native_place,
      </if>
      <if test="maritalStatus != null">
        marital_status,
      </if>
      <if test="politicsStatus != null">
        politics_status,
      </if>
      <if test="employeesStatus != null">
        employees_status,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="jobs != null">
        jobs,
      </if>
      <if test="titles != null">
        titles,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=CHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="birthDay != null">
        #{birthDay,jdbcType=DATE},
      </if>
      <if test="nativePlace != null">
        #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null">
        #{maritalStatus,jdbcType=VARCHAR},
      </if>
      <if test="politicsStatus != null">
        #{politicsStatus,jdbcType=VARCHAR},
      </if>
      <if test="employeesStatus != null">
        #{employeesStatus,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="jobs != null">
        #{jobs,jdbcType=VARCHAR},
      </if>
      <if test="titles != null">
        #{titles,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lqt.hr.model.EmployeeInfoExample" resultType="java.lang.Long">
    select count(*) from employee_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update employee_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.idNumber != null">
        id_number = #{record.idNumber,jdbcType=CHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=VARCHAR},
      </if>
      <if test="record.birthDay != null">
        birth_day = #{record.birthDay,jdbcType=DATE},
      </if>
      <if test="record.nativePlace != null">
        native_place = #{record.nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="record.maritalStatus != null">
        marital_status = #{record.maritalStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.politicsStatus != null">
        politics_status = #{record.politicsStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.employeesStatus != null">
        employees_status = #{record.employeesStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=INTEGER},
      </if>
      <if test="record.jobs != null">
        jobs = #{record.jobs,jdbcType=VARCHAR},
      </if>
      <if test="record.titles != null">
        titles = #{record.titles,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update employee_info
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      id_number = #{record.idNumber,jdbcType=CHAR},
      gender = #{record.gender,jdbcType=VARCHAR},
      birth_day = #{record.birthDay,jdbcType=DATE},
      native_place = #{record.nativePlace,jdbcType=VARCHAR},
      marital_status = #{record.maritalStatus,jdbcType=VARCHAR},
      politics_status = #{record.politicsStatus,jdbcType=VARCHAR},
      employees_status = #{record.employeesStatus,jdbcType=VARCHAR},
      department_id = #{record.departmentId,jdbcType=INTEGER},
      jobs = #{record.jobs,jdbcType=VARCHAR},
      titles = #{record.titles,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lqt.hr.model.EmployeeInfo">
    update employee_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=CHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="birthDay != null">
        birth_day = #{birthDay,jdbcType=DATE},
      </if>
      <if test="nativePlace != null">
        native_place = #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null">
        marital_status = #{maritalStatus,jdbcType=VARCHAR},
      </if>
      <if test="politicsStatus != null">
        politics_status = #{politicsStatus,jdbcType=VARCHAR},
      </if>
      <if test="employeesStatus != null">
        employees_status = #{employeesStatus,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="jobs != null">
        jobs = #{jobs,jdbcType=VARCHAR},
      </if>
      <if test="titles != null">
        titles = #{titles,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lqt.hr.model.EmployeeInfo">
    update employee_info
    set name = #{name,jdbcType=VARCHAR},
      id_number = #{idNumber,jdbcType=CHAR},
      gender = #{gender,jdbcType=VARCHAR},
      birth_day = #{birthDay,jdbcType=DATE},
      native_place = #{nativePlace,jdbcType=VARCHAR},
      marital_status = #{maritalStatus,jdbcType=VARCHAR},
      politics_status = #{politicsStatus,jdbcType=VARCHAR},
      employees_status = #{employeesStatus,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      jobs = #{jobs,jdbcType=VARCHAR},
      titles = #{titles,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>